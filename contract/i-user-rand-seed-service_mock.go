// Code generated by MockGen. DO NOT EDIT.
// Source: contract\i-user-rand-seed-service.go

// Package contract is a generated GoMock package.
package contract

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIUserRandSeedService is a mock of IUserRandSeedService interface.
type MockIUserRandSeedService struct {
	ctrl     *gomock.Controller
	recorder *MockIUserRandSeedServiceMockRecorder
}

// MockIUserRandSeedServiceMockRecorder is the mock recorder for MockIUserRandSeedService.
type MockIUserRandSeedServiceMockRecorder struct {
	mock *MockIUserRandSeedService
}

// NewMockIUserRandSeedService creates a new mock instance.
func NewMockIUserRandSeedService(ctrl *gomock.Controller) *MockIUserRandSeedService {
	mock := &MockIUserRandSeedService{ctrl: ctrl}
	mock.recorder = &MockIUserRandSeedServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIUserRandSeedService) EXPECT() *MockIUserRandSeedServiceMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockIUserRandSeedService) Get(arg0 IUnitOfWork, arg1, arg2 int) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1, arg2)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockIUserRandSeedServiceMockRecorder) Get(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockIUserRandSeedService)(nil).Get), arg0, arg1, arg2)
}

// Use mocks base method.
func (m *MockIUserRandSeedService) Use(arg0 IUnitOfWork, arg1 int) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Use", arg0, arg1)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Use indicates an expected call of Use.
func (mr *MockIUserRandSeedServiceMockRecorder) Use(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Use", reflect.TypeOf((*MockIUserRandSeedService)(nil).Use), arg0, arg1)
}
