// Code generated by MockGen. DO NOT EDIT.
// Source: model\contract\i-enum-item.go

// Package contract is a generated GoMock package.
package contract

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIEnumItem is a mock of IEnumItem interface.
type MockIEnumItem struct {
	ctrl     *gomock.Controller
	recorder *MockIEnumItemMockRecorder
}

// MockIEnumItemMockRecorder is the mock recorder for MockIEnumItem.
type MockIEnumItemMockRecorder struct {
	mock *MockIEnumItem
}

// NewMockIEnumItem creates a new mock instance.
func NewMockIEnumItem(ctrl *gomock.Controller) *MockIEnumItem {
	mock := &MockIEnumItem{ctrl: ctrl}
	mock.recorder = &MockIEnumItemMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIEnumItem) EXPECT() *MockIEnumItemMockRecorder {
	return m.recorder
}

// GetCustomEncodingKey mocks base method.
func (m *MockIEnumItem) GetCustomEncodingKey(arg0 string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCustomEncodingKey", arg0)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetCustomEncodingKey indicates an expected call of GetCustomEncodingKey.
func (mr *MockIEnumItemMockRecorder) GetCustomEncodingKey(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCustomEncodingKey", reflect.TypeOf((*MockIEnumItem)(nil).GetCustomEncodingKey), arg0)
}

// GetEncodingKey mocks base method.
func (m *MockIEnumItem) GetEncodingKey() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEncodingKey")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetEncodingKey indicates an expected call of GetEncodingKey.
func (mr *MockIEnumItemMockRecorder) GetEncodingKey() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEncodingKey", reflect.TypeOf((*MockIEnumItem)(nil).GetEncodingKey))
}

// GetValue mocks base method.
func (m *MockIEnumItem) GetValue() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetValue")
	ret0, _ := ret[0].(int)
	return ret0
}

// GetValue indicates an expected call of GetValue.
func (mr *MockIEnumItemMockRecorder) GetValue() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetValue", reflect.TypeOf((*MockIEnumItem)(nil).GetValue))
}
