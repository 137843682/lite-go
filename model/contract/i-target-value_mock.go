// Code generated by MockGen. DO NOT EDIT.
// Source: model\contract\i-target-value.go

// Package contract is a generated GoMock package.
package contract

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockITargetValue is a mock of ITargetValue interface.
type MockITargetValue struct {
	ctrl     *gomock.Controller
	recorder *MockITargetValueMockRecorder
}

// MockITargetValueMockRecorder is the mock recorder for MockITargetValue.
type MockITargetValueMockRecorder struct {
	mock *MockITargetValue
}

// NewMockITargetValue creates a new mock instance.
func NewMockITargetValue(ctrl *gomock.Controller) *MockITargetValue {
	mock := &MockITargetValue{ctrl: ctrl}
	mock.recorder = &MockITargetValueMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockITargetValue) EXPECT() *MockITargetValueMockRecorder {
	return m.recorder
}

// GetCount mocks base method.
func (m *MockITargetValue) GetCount() int64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCount")
	ret0, _ := ret[0].(int64)
	return ret0
}

// GetCount indicates an expected call of GetCount.
func (mr *MockITargetValueMockRecorder) GetCount() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCount", reflect.TypeOf((*MockITargetValue)(nil).GetCount))
}

// GetSource mocks base method.
func (m *MockITargetValue) GetSource() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSource")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetSource indicates an expected call of GetSource.
func (mr *MockITargetValueMockRecorder) GetSource() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSource", reflect.TypeOf((*MockITargetValue)(nil).GetSource))
}

// GetTargetNo mocks base method.
func (m *MockITargetValue) GetTargetNo() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTargetNo")
	ret0, _ := ret[0].(int)
	return ret0
}

// GetTargetNo indicates an expected call of GetTargetNo.
func (mr *MockITargetValueMockRecorder) GetTargetNo() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTargetNo", reflect.TypeOf((*MockITargetValue)(nil).GetTargetNo))
}

// GetTargetType mocks base method.
func (m *MockITargetValue) GetTargetType() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTargetType")
	ret0, _ := ret[0].(int)
	return ret0
}

// GetTargetType indicates an expected call of GetTargetType.
func (mr *MockITargetValueMockRecorder) GetTargetType() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTargetType", reflect.TypeOf((*MockITargetValue)(nil).GetTargetType))
}

// GetValueType mocks base method.
func (m *MockITargetValue) GetValueType() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetValueType")
	ret0, _ := ret[0].(int)
	return ret0
}

// GetValueType indicates an expected call of GetValueType.
func (mr *MockITargetValueMockRecorder) GetValueType() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetValueType", reflect.TypeOf((*MockITargetValue)(nil).GetValueType))
}
