// Code generated by MockGen. DO NOT EDIT.
// Source: model\contract\i-api-response.go

// Package contract is a generated GoMock package.
package contract

import (
	reflect "reflect"

	errorcode "github.com/ahl5esoft/lite-go/model/enum/error-code"
	gomock "github.com/golang/mock/gomock"
)

// MockIApiResposne is a mock of IApiResposne interface.
type MockIApiResposne struct {
	ctrl     *gomock.Controller
	recorder *MockIApiResposneMockRecorder
}

// MockIApiResposneMockRecorder is the mock recorder for MockIApiResposne.
type MockIApiResposneMockRecorder struct {
	mock *MockIApiResposne
}

// NewMockIApiResposne creates a new mock instance.
func NewMockIApiResposne(ctrl *gomock.Controller) *MockIApiResposne {
	mock := &MockIApiResposne{ctrl: ctrl}
	mock.recorder = &MockIApiResposneMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIApiResposne) EXPECT() *MockIApiResposneMockRecorder {
	return m.recorder
}

// GetData mocks base method.
func (m *MockIApiResposne) GetData() any {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetData")
	ret0, _ := ret[0].(any)
	return ret0
}

// GetData indicates an expected call of GetData.
func (mr *MockIApiResposneMockRecorder) GetData() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetData", reflect.TypeOf((*MockIApiResposne)(nil).GetData))
}

// GetErrorCode mocks base method.
func (m *MockIApiResposne) GetErrorCode() errorcode.Value {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetErrorCode")
	ret0, _ := ret[0].(errorcode.Value)
	return ret0
}

// GetErrorCode indicates an expected call of GetErrorCode.
func (mr *MockIApiResposneMockRecorder) GetErrorCode() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetErrorCode", reflect.TypeOf((*MockIApiResposne)(nil).GetErrorCode))
}
